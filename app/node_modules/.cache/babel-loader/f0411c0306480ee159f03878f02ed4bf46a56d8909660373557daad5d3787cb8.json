{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polok\\\\Work\\\\morecorp\\\\frontend\\\\src\\\\List.js\",\n  _s = $RefreshSig$();\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Book() {\n  _s();\n  const username = JSON.parse(window.localStorage.getItem('user-info'));\n  const [isLoading, setIsLoading] = useState(false);\n  const date = new Date();\n  let day = date.getDate();\n  let sum = date.getMonth() + 1;\n  let month = sum < 10 ? \"0\" + sum : sum;\n  let year = date.getFullYear();\n\n  // This arrangement can be altered based on how we want the date's format to appear.\n  let currentDate = `${year}-${month}-${day}`;\n  useEffect(() => {\n    document.getElementById(\"fromDate\").defaultValue = currentDate;\n    document.getElementById(\"toDate\").defaultValue = currentDate;\n    let data = {\n      'from': currentDate,\n      'to': currentDate\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: \"Bearer ${token}\"\n      },\n      body: JSON.stringify(data)\n    };\n    // fetch(\"http://127.0.0.1:8000/api/booking-list\", requestOptions)\n    //     .then((respose) => respose.json())\n    //     .then((respose) => {\n    //         //    setUsers(respose.data)\n    //         if (respose.token) {\n    //             localStorage.setItem('user-info', JSON.stringify(respose));\n    //             toast(\"Logged in successfully\", {\n    //                 position: toast.POSITION.TOP_CENTER,\n    //                 className: 'toast-success',\n    //                 progressClassName: 'success-progress-bar',\n    //                 autoClose: 2000,\n    //                 toastId: 1\n    //             });\n    //         } else {\n    //             setIsLoading(false);\n    //             toast(\"Logged in Failed\", {\n    //                 position: toast.POSITION.TOP_CENTER,\n    //                 className: 'toast-error',\n    //                 progressClassName: 'error-progress-bar',\n    //                 autoClose: 2000,\n    //                 toastId: 2\n    //             });\n    //         }\n\n    //     })\n    //     .catch(() => {\n    //         setIsLoading(false);\n    //         toast(\"Unable to send request\", {\n    //             position: toast.POSITION.TOP_CENTER,\n    //             className: 'toast-error',\n    //             progressClassName: 'error-progress-bar',\n    //             autoClose: 2000,\n    //             toastId: 1\n    //         });\n    //     });\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [localStorage.getItem('user-info') ? username.name : \"\", \" you bookings.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"fromDate\",\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          id: \"fromDate\",\n          type: \"date\",\n          name: \"fromDate\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"valid\",\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"toDate\",\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          id: \"toDate\",\n          type: \"date\",\n          value: currentDate,\n          name: \"toDate\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"valid\",\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Book, \"DlrQjwOD5XS1kcZJvMHoaf7KaZ8=\");\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["Header","useState","useEffect","ToastContainer","toast","Col","Form","Row","Book","username","JSON","parse","window","localStorage","getItem","isLoading","setIsLoading","date","Date","day","getDate","sum","getMonth","month","year","getFullYear","currentDate","document","getElementById","defaultValue","data","requestOptions","method","headers","Authorization","body","stringify","name"],"sources":["C:/Users/polok/Work/morecorp/frontend/src/List.js"],"sourcesContent":["import Header from './Header';\r\nimport { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Book() {\r\n    const username = JSON.parse(window.localStorage.getItem('user-info'));\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const date = new Date();\r\n    let day = date.getDate();\r\n    let sum = (date.getMonth() + 1);\r\n    let month = sum < 10 ? \"0\" + sum : sum;\r\n    let year = date.getFullYear();\r\n    \r\n    // This arrangement can be altered based on how we want the date's format to appear.\r\n    let currentDate = `${year}-${month}-${day}`;\r\n    useEffect(() => {\r\n        document.getElementById(\"fromDate\").defaultValue = currentDate;\r\n        document.getElementById(\"toDate\").defaultValue = currentDate;\r\n        let data = { 'from': currentDate, 'to': currentDate }\r\n        const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json',Authorization: \"Bearer ${token}\", },\r\n        body: JSON.stringify(data)\r\n    };\r\n        // fetch(\"http://127.0.0.1:8000/api/booking-list\", requestOptions)\r\n        //     .then((respose) => respose.json())\r\n        //     .then((respose) => {\r\n        //         //    setUsers(respose.data)\r\n        //         if (respose.token) {\r\n        //             localStorage.setItem('user-info', JSON.stringify(respose));\r\n        //             toast(\"Logged in successfully\", {\r\n        //                 position: toast.POSITION.TOP_CENTER,\r\n        //                 className: 'toast-success',\r\n        //                 progressClassName: 'success-progress-bar',\r\n        //                 autoClose: 2000,\r\n        //                 toastId: 1\r\n        //             });\r\n        //         } else {\r\n        //             setIsLoading(false);\r\n        //             toast(\"Logged in Failed\", {\r\n        //                 position: toast.POSITION.TOP_CENTER,\r\n        //                 className: 'toast-error',\r\n        //                 progressClassName: 'error-progress-bar',\r\n        //                 autoClose: 2000,\r\n        //                 toastId: 2\r\n        //             });\r\n        //         }\r\n\r\n        //     })\r\n        //     .catch(() => {\r\n        //         setIsLoading(false);\r\n        //         toast(\"Unable to send request\", {\r\n        //             position: toast.POSITION.TOP_CENTER,\r\n        //             className: 'toast-error',\r\n        //             progressClassName: 'error-progress-bar',\r\n        //             autoClose: 2000,\r\n        //             toastId: 1\r\n        //         });\r\n        //     });\r\n    });\r\n  return (\r\n    <>\r\n    \r\n    <Header />\r\n    <h2>{localStorage.getItem('user-info') ? username.name : \"\"} you bookings.</h2>\r\n    <form>\r\n                            <Form.Group as={Col} md=\"3\">\r\n                                <Form.Label htmlFor=\"fromDate\">From</Form.Label>\r\n                                <Form.Control size=\"lg\" id=\"fromDate\" type=\"date\" name=\"fromDate\" required />\r\n                                <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Please enter email.</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"3\">\r\n                                <Form.Label htmlFor=\"toDate\">To</Form.Label>\r\n                                <Form.Control size=\"lg\" id=\"toDate\" type=\"date\" value={currentDate} name=\"toDate\" required />\r\n                                <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">Please enter email.</Form.Control.Feedback>\r\n                            </Form.Group>\r\n    </form>\r\n        <div id=\"list\">\r\n\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}