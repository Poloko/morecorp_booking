{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polok\\\\Work\\\\morecorp\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport useState from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-xs-6 col-sm-6 col-md-6 offset-xs-3 offset-sm-3 offset-md-3 register-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"namereg\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            size: \"lg\",\n            type: \"text\",\n            value: name,\n            name: \"namereg\",\n            placeholder: \"User Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 7\n          }, this), errors.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"emailreg\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            size: \"lg\",\n            type: \"email\",\n            value: email,\n            name: \"emailreg\",\n            placeholder: \"User Email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 7\n          }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"inputPassword5\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            id: \"inputPassword5\",\n            \"aria-describedby\": \"passwordHelpBlock\",\n            placeholder: \"Password\",\n            size: \"lg\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            id: \"passwordHelpBlock\",\n            muted: true,\n            children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"inputPasswordconfirm\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: passwordConfirm,\n            id: \"inputPasswordconfirm\",\n            \"aria-describedby\": \"passwordHelpBlock\",\n            placeholder: \"Password\",\n            size: \"lg\",\n            onChange: e => setPasswordConfirm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"lg\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"DrFAT1KrPhT+EZdPFpRUI9NScjo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Form","Button","Card","useState","Register","name","setName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","width","e","target","value","errors","length"],"sources":["C:/Users/polok/Work/morecorp/frontend/src/Register.js"],"sourcesContent":["import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport useState from 'react';\r\n\r\nfunction Register() {\r\n    const [name,setName]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [passwordConfirm,setPasswordConfirm]=useState(\"\");\r\n  return (    \r\n    <div className='col-xs-6 col-sm-6 col-md-6 offset-xs-3 offset-sm-3 offset-md-3 register-form'>\r\n    <h2>Register</h2>\r\n        <Card style={{ width: '100%' }}>\r\n      <Card.Body>\r\n        <Card.Text>\r\n        <Form.Label htmlFor=\"namereg\">Name</Form.Label>\r\n      <Form.Control size=\"lg\" type=\"text\" value={name} name=\"namereg\" placeholder=\"User Name\" onChange={(e)=>setName(e.target.value)}/>              \r\n      {errors.name.length > 0 && \r\n                <span className='error'>{errors.name}</span>}\r\n      <Form.Label htmlFor=\"emailreg\">Email</Form.Label>\r\n      <Form.Control size=\"lg\" type=\"email\" value={email} name=\"emailreg\" placeholder=\"User Email\" onChange={(e)=>setEmail(e.target.value)}/>              \r\n      {errors.email.length > 0 && \r\n                <span className='error'>{errors.email}</span>}\r\n      <Form.Label htmlFor=\"inputPassword5\">Password</Form.Label>\r\n      <Form.Control type=\"password\" value={password} id=\"inputPassword5\" aria-describedby=\"passwordHelpBlock\" placeholder=\"Password\" size=\"lg\" onChange={(e)=>setPassword(e.target.value)}/>\r\n      <Form.Text id=\"passwordHelpBlock\" muted>\r\n        Your password must be 8-20 characters long, contain letters and numbers,\r\n        and must not contain spaces, special characters.\r\n      </Form.Text>\r\n      <Form.Label htmlFor=\"inputPasswordconfirm\">Confirm Password</Form.Label>\r\n      <Form.Control type=\"password\" value={passwordConfirm} id=\"inputPasswordconfirm\" aria-describedby=\"passwordHelpBlock\" placeholder=\"Password\" size=\"lg\" onChange={(e)=>setPasswordConfirm(e.target.value)}/>\r\n      \r\n        </Card.Text>\r\n        <Button variant=\"primary\" size=\"lg\">\r\n          Register\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}